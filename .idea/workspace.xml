<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="7c4b3f6a-ab64-44a5-b9d8-a42b601c02ac" name="変更" comment="feat: Github Actionの設定変更">
      <change beforePath="$PROJECT_DIR$/.github/workflows/backend-tests.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/be/sqlboiler.toml" beforeDir="false" afterPath="$PROJECT_DIR$/be/sqlboiler.toml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="GOROOT" url="file://$USER_HOME$/go/go1.24.1" />
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="develop" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;dsrice&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/dsrice/legend_score.git&quot;,
    &quot;accountId&quot;: &quot;a07a0818-ac39-4fd8-8939-84589e0f28fa&quot;
  }
}</component>
  <component name="GoLinterSelectedExecutable" path="$PROJECT_DIR$/../../../ProgramData/chocolatey/bin/golangci-lint.exe" />
  <component name="GoVcsConfiguration">
    <option name="GO_FMT" value="false" />
  </component>
  <component name="KubernetesApiPersistence">{}</component>
  <component name="KubernetesApiProvider">{
  &quot;isMigrated&quot;: true
}</component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 7
}</component>
  <component name="ProjectId" id="2uuMFeRnVysqt20VpLE08ec7Vxx" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Go テスト.TestAuthController_Login (legend_score/controllers 内).executor": "Run",
    "Go テスト.TestGetConnection (legend_score/infra/database/connection 内).executor": "Debug",
    "Go テスト.TestToOne (legend_score/infra/database/models 内).executor": "Run",
    "Go テスト.TestToOne/FrameToUserUsingUser (legend_score/infra/database/models 内).executor": "Run",
    "Go テスト.TestUserController_GetUsers (legend_score/controllers 内).executor": "Run",
    "Go テスト.TestUserRepository_Insert (legend_score/repositories 内) (1).executor": "Run",
    "Go テスト.TestUserRepository_Insert (legend_score/repositories 内).executor": "Run",
    "Go テスト.TestUserTokenRepository_Insert (legend_score/repositories 内).executor": "Run",
    "Go テスト.go test be.executor": "Coverage",
    "Go テスト.go test controllers.executor": "Run",
    "Go テスト.go test legend_score.executor": "Debug",
    "Go テスト.go test models.executor": "Run",
    "Go テスト.go test repositories.executor": "Run",
    "RunOnceActivity.GoLinterPluginOnboarding": "true",
    "RunOnceActivity.GoLinterPluginStorageMigration": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "SHELLCHECK.PATH": "C:\\Users\\fujimoto\\AppData\\Roaming\\JetBrains\\GoLand2024.3\\plugins\\Shell Script\\shellcheck.exe",
    "git-widget-placeholder": "feature/user__detail の #2",
    "go.import.settings.migrated": "true",
    "go.sdk.automatically.set": "true",
    "javascript.nodejs.core.library.configured.version": "21.2.0",
    "javascript.nodejs.core.library.typings.version": "22.15.2",
    "junie.onboarding.icon.badge.shown": "true",
    "last_opened_file_path": "C:/work/program/legend_score/be",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.standard": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.standard": "",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "ml.llm.LLMConfigurable",
    "ts.external.directory.path": "C:\\work\\program\\legend_score\\fe\\ls-app\\node_modules\\typescript\\lib"
  },
  "keyToStringList": {
    "DatabaseDriversLRU": [
      "mysql"
    ]
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\work\program\legend_score\be" />
    </key>
  </component>
  <component name="RunManager" selected="Go テスト.go test be">
    <configuration name="TestToOne (legend_score/infra/database/models 内)" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="legend_score" />
      <working_directory value="$PROJECT_DIR$/be/infra/database/models" />
      <envs>
        <env name="DATABASE_ADDR" value="localhost:3305" />
        <env name="DATABASE_NAME" value="legend_score" />
        <env name="DATABASE_PASS" value="docker" />
        <env name="DATABASE_USER" value="docker" />
        <env name="GO_ENV" value="test" />
        <env name="mysql.dbname" value="legend_score" />
        <env name="mysql.host" value="localhost" />
        <env name="mysql.pass" value="docker" />
        <env name="mysql.port" value="3305" />
        <env name="mysql.skipsqlcmd" value="true" />
        <env name="mysql.skiptest" value="true" />
        <env name="mysql.sslmode" value="false" />
        <env name="mysql.testdbname" value="legend_score_test" />
        <env name="mysql.user" value="docker" />
        <env name="ROOT_PATH" value="$PROJECT_DIR$/be" />
        <env name="SKIP_SQLBOILER_TESTS" value="true" />
        <env name="SQLBOILER_DBNAME" value="legend_score_test" />
      </envs>
      <root_directory value="$PROJECT_DIR$/be" />
      <kind value="PACKAGE" />
      <package value="legend_score/infra/database/models" />
      <directory value="$PROJECT_DIR$/be/infra/database/models" />
      <filePath value="$PROJECT_DIR$" />
      <output_directory value="$PROJECT_DIR$/be/coverage" />
      <framework value="gotest" />
      <pattern value="^\QTestToOne\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestToOne/FrameToUserUsingUser (legend_score/infra/database/models 内)" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="legend_score" />
      <working_directory value="$PROJECT_DIR$/be/infra/database/models" />
      <envs>
        <env name="DATABASE_ADDR" value="localhost:3305" />
        <env name="DATABASE_NAME" value="legend_score" />
        <env name="DATABASE_PASS" value="docker" />
        <env name="DATABASE_USER" value="docker" />
        <env name="GO_ENV" value="test" />
        <env name="mysql.dbname" value="legend_score" />
        <env name="mysql.host" value="localhost" />
        <env name="mysql.pass" value="docker" />
        <env name="mysql.port" value="3305" />
        <env name="mysql.skipsqlcmd" value="true" />
        <env name="mysql.skiptest" value="true" />
        <env name="mysql.sslmode" value="false" />
        <env name="mysql.testdbname" value="legend_score_test" />
        <env name="mysql.user" value="docker" />
        <env name="ROOT_PATH" value="$PROJECT_DIR$/be" />
        <env name="SKIP_SQLBOILER_TESTS" value="true" />
        <env name="SQLBOILER_DBNAME" value="legend_score_test" />
      </envs>
      <root_directory value="$PROJECT_DIR$/be" />
      <kind value="PACKAGE" />
      <package value="legend_score/infra/database/models" />
      <directory value="$PROJECT_DIR$/be/infra/database/models" />
      <filePath value="$PROJECT_DIR$" />
      <output_directory value="$PROJECT_DIR$/be/coverage" />
      <framework value="gotest" />
      <pattern value="^\QTestToOne\E$/^\QFrameToUserUsingUser\E$" />
      <method v="2" />
    </configuration>
    <configuration name="go test be" type="GoTestRunConfiguration" factoryName="Go Test" nameIsGenerated="true">
      <module name="legend_score" />
      <working_directory value="$PROJECT_DIR$/be" />
      <envs>
        <env name="DATABASE_ADDR" value="localhost:3305" />
        <env name="DATABASE_NAME" value="legend_score" />
        <env name="DATABASE_PASS" value="docker" />
        <env name="DATABASE_USER" value="docker" />
        <env name="GO_ENV" value="test" />
        <env name="mysql.dbname" value="legend_score" />
        <env name="mysql.host" value="localhost" />
        <env name="mysql.pass" value="docker" />
        <env name="mysql.port" value="3305" />
        <env name="mysql.skipsqlcmd" value="true" />
        <env name="mysql.skiptest" value="true" />
        <env name="mysql.sslmode" value="false" />
        <env name="mysql.testdbname" value="legend_score_test" />
        <env name="mysql.user" value="docker" />
        <env name="ROOT_PATH" value="$PROJECT_DIR$/be" />
        <env name="SKIP_SQLBOILER_TESTS" value="true" />
        <env name="SQLBOILER_DBNAME" value="legend_score_test" />
      </envs>
      <kind value="DIRECTORY" />
      <package value="C:\work\program\legend_score\be" />
      <directory value="$PROJECT_DIR$/be" />
      <filePath value="$PROJECT_DIR$" />
      <output_directory value="$PROJECT_DIR$/be/coverage" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration name="go test models" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="legend_score" />
      <working_directory value="$PROJECT_DIR$/be/infra/database/models" />
      <envs>
        <env name="DATABASE_ADDR" value="localhost:3305" />
        <env name="DATABASE_NAME" value="legend_score" />
        <env name="DATABASE_PASS" value="docker" />
        <env name="DATABASE_USER" value="docker" />
        <env name="GO_ENV" value="test" />
        <env name="mysql.dbname" value="legend_score" />
        <env name="mysql.host" value="localhost" />
        <env name="mysql.pass" value="docker" />
        <env name="mysql.port" value="3305" />
        <env name="mysql.skipsqlcmd" value="true" />
        <env name="mysql.skiptest" value="true" />
        <env name="mysql.sslmode" value="false" />
        <env name="mysql.testdbname" value="legend_score_test" />
        <env name="mysql.user" value="docker" />
        <env name="ROOT_PATH" value="$PROJECT_DIR$/be" />
        <env name="SKIP_SQLBOILER_TESTS" value="true" />
        <env name="SQLBOILER_DBNAME" value="legend_score_test" />
      </envs>
      <root_directory value="$PROJECT_DIR$/be" />
      <kind value="DIRECTORY" />
      <package value="C:\work\program\legend_score\be" />
      <directory value="$PROJECT_DIR$/be/infra/database/models" />
      <filePath value="$PROJECT_DIR$" />
      <output_directory value="$PROJECT_DIR$/be/coverage" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Go テスト.go test be" />
      <item itemvalue="Go テスト.TestToOne (legend_score/infra/database/models 内)" />
      <item itemvalue="Go テスト.TestToOne/FrameToUserUsingUser (legend_score/infra/database/models 内)" />
      <item itemvalue="Go テスト.go test models" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Go テスト.go test models" />
        <item itemvalue="Go テスト.TestToOne/FrameToUserUsingUser (legend_score/infra/database/models 内)" />
        <item itemvalue="Go テスト.TestToOne (legend_score/infra/database/models 内)" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-3b128438d3f6-34ac7aa8f6ab-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-251.23774.430" />
        <option value="bundled-js-predefined-d6986cc7102b-f27c65a3e318-JavaScript-GO-251.23774.430" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="アプリケーションレベル" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="デフォルトタスク">
      <changelist id="7c4b3f6a-ab64-44a5-b9d8-a42b601c02ac" name="変更" comment="feat: 調整" />
      <created>1745503591752</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1745503591752</updated>
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="feat: CORSの設定を追加" />
    <MESSAGE value="feat: ホットリロードの導入など見直し" />
    <MESSAGE value="feat: ユーザー一覧取得APIを追加" />
    <MESSAGE value="feat: FEにユーザー一覧画面を用意" />
    <MESSAGE value="feat: Github Actionを追加" />
    <MESSAGE value="feat: ユーザー詳細取得APIを作成" />
    <MESSAGE value="feat: Mockを用意" />
    <MESSAGE value="feat: Mockを導入" />
    <MESSAGE value="feat: FEの処理を見直し" />
    <MESSAGE value="feat: APIの利用にトークン付与を追加" />
    <MESSAGE value="feat: ユーザー一覧の取得から表示まで対応" />
    <MESSAGE value="feat: FEのテストコードを実行コマンドを見直し" />
    <MESSAGE value="feat: APIの利用条件見直し" />
    <MESSAGE value="feat: テストコードの実装修正" />
    <MESSAGE value="feat: repositoryのテストコードを追加" />
    <MESSAGE value="feat: repositoryのテストコードを修正" />
    <MESSAGE value="feat: 開発環境で全テストコードを実行できるように調整" />
    <MESSAGE value="feat: なかったレイヤーのテストコードを追加" />
    <MESSAGE value="feat: テストコードを実行できるように宣言見直し" />
    <MESSAGE value="feat: Github Action対応" />
    <MESSAGE value="feat: Github Actionに事前マイグレーションを追加" />
    <MESSAGE value="feat: Github Action用に設定変更" />
    <MESSAGE value="feat: envの取得先を見直し" />
    <MESSAGE value="feat: connの設定見直し" />
    <MESSAGE value="feat: Github Actionの設定変更" />
    <option name="LAST_COMMIT_MESSAGE" value="feat: Github Actionの設定変更" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/legend_score$go_test_be.out" NAME="go test be のカバレッジ結果" MODIFIED="1746720720458" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
  </component>
</project>