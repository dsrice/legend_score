name: Frontend Tests

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'fe/**'

jobs:
  test:
    name: Run Frontend Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'fe/ls-app/package-lock.json'

      - name: Install dependencies
        run: |
          cd fe/ls-app
          npm ci

      - name: Run tests with coverage
        run: |
          cd fe/ls-app
          npm test -- --coverage --watchAll=false
        env:
          CI: true

      - name: Get coverage percentage
        id: get-coverage
        run: |
          cd fe/ls-app
          # Check if coverage-summary.json exists
          if [ -f "coverage/coverage-summary.json" ]; then
            COVERAGE=$(cat coverage/coverage-summary.json | jq -r '.total.lines.pct')
          # Fallback to lcov-report/index.html if summary.json doesn't exist
          elif [ -f "coverage/lcov-report/index.html" ]; then
            COVERAGE=$(grep -o 'class="fraction">[0-9]*\/[0-9]*</span>' coverage/lcov-report/index.html | head -1 | grep -o '[0-9]*\/[0-9]*' | awk -F'/' '{print ($1/$2)*100}')
          else
            COVERAGE="Unknown"
          fi
          echo "coverage=$COVERAGE" >> $GITHUB_OUTPUT

      - name: Comment PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const coverage = '${{ steps.get-coverage.outputs.coverage }}';
            const { issue: { number: issue_number }, repo: { owner, repo } } = context;

            let coverageDisplay = coverage;
            if (coverage !== 'Unknown') {
              coverageDisplay = `${coverage}%`;
            }

            github.rest.issues.createComment({
              issue_number,
              owner,
              repo,
              body: `## Frontend Test Coverage: ${coverageDisplay}

              The frontend tests have been run successfully.
              ${coverage !== 'Unknown' ? `Total line coverage: **${coverage}%**` : 'Coverage information could not be determined.'}

              [View detailed coverage report in the workflow run](https://github.com/${owner}/${repo}/actions/runs/${{ github.run_id }})
              `
            });